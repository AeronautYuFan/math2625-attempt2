q()
pnorm(1)
pnorm(1)-pnorm(-1)
pt(2.889,66)
pt(-2.889,66)
*2
x <- pt(-2.889, 66)
2x
2*x
qt(.15/2, 99)
qt(.05/2, )
qt(.05/2, 9)
read.table("E-mails.txt", header = TRUE)
setwd("~/Repos/stats/math2540/hw2")
.table("E-mails.txt", header = TRUE)
data4 = read.table("E-mails.txt", header = TRUE)
boxplot(data4, horizontal = TRUE, col = "lightblue", xlab = "Emails Received per Student")
hist(data4, col = "lightblue", xlab = "Emails Received per Student")
hist(data4, col = "lightblue", xlab = "Emails Received per Student")
data4 = read.table("E-mails.txt", header = TRUE)
boxplot(data4, horizontal = TRUE, col = "lightblue", xlab = "Emails Received per Student")
hist(data4, col = "lightblue", xlab = "Emails Received per Student")
hist(data4$NumberOfE.mails, col = "lightblue", xlab = "Emails Received per Student")
hist(data4$NumberOfE.mails, col = "lightblue", main = "Emails Received from Students",xlab = "Emails Received per Student")
hist(data4$NumberOfE.mails, col = "lightgreen", main = "Emails Received from Students",xlab = "Emails Received per Student")
summary(data4)
#problem 5
rm(list = ls())
data5 = c(296, 338, 341, 261, 250, 347, 336, 297, 279, 297,
259, 334, 281, 284, 279, 266, 300, 305, 310, 253)
summary(data5)
t.test(data5)
assumeNormalIGuess = t.test(data5, conf.level = 0.98)
assumeNormalIGuess$conf.int
# Margin of error
error = qt(0.99, df = 19) * (36 / sqrt(20))
# Confidence interval
low = mean(data5) - error
high = mean(data5) + error
print(low)
print(high)
# Margin of error
error = qnorm(0.99) * (36 / sqrt(20))
# Confidence interval
low = mean(data5) - error
high = mean(data5) + error
print(low)
print(high)
# Margin of error
error = qnorm(0.01) * (-1) * (36 / sqrt(20))
# Confidence interval
low = mean(data5) - error
high = mean(data5) + error
print(low)
print(high)
mean(data5)
print(low)
print(high)
#problem 6
#looks like a wilcoxon sign rank is appropriate, but biostats is traumatizing enough
june = c(54, 49, 68, 66, 62, 62)
aug = c(50, 65, 74, 64, 68, 72)
d6Diffs = aug - june
t.test(d6Diffs)
wilcox.test(d6Diffs)
wilcox.test(d6Diffs)
# problem 7
data7 = read.table("Hard_water.txt")
View(data7)
# problem 7
data7 = read.table("Hard_water.txt", header = TRUE)
north = subset(data7$Mortality, Derby == "North")
north = subset(data7, Derby == "North")
south = subset(data7, Derby == "South")
t.test(north, south)
t.test(north$Mortality, south$Mortality)
View(north)
#problem 8
data8 = read.table("Memory.txt", header = TRUE)
View(data8)
ginkgo = subset(data8$Memory, data8$Treatment == "ginkgo")
placebo = subset(data8$Memory, data8$Treatment == "placebo")
boxplot(ginkgo, placebo, horizontal = TRUE)
boxplot(ginkgo, placebo, horizontal = TRUE,
names = c("Ginkgo", "Placebo"),
col = c("lightgreen", "lightorange"), xlab = "Growth (percentage)")
boxplot(ginkgo, placebo, horizontal = TRUE,
names = c("Ginkgo", "Placebo"),
col = c("lightgreen", "orange"), xlab = "Growth (percentage)")
boxplot(ginkgo, placebo, horizontal = TRUE,
names = c("Ginkgo", "Placebo"),
col = c("lightgreen", "orange"), xlab = "Memory Score")
t.test(ginkgo, placebo)
summary(ginkgo)
summary(placebo)
pbinom(3, size = 10, prob = 0.5)
pbinom(3, size = 10, prob = 0.5) + pbinom(7, size = 10, prob = 0.5)
pbinom(3, size = 10, prob = 0.5) + 1 - pbinom(7, size = 10, prob = 0.5)
pbinom(0:3, size = 10, prob = 0.5)
pbinom(5, size = 10, prob = 0.3)
pbinom(5, size = 10, prob = 0.5)
pbinom(5, size = 10, prob = 0.5) + pbinom(5, size = 10, prob = 0.5)
pbinom(20, size = 40, prob = 0.5) + pbinom(20, size = 40, prob = 0.5)
pbinom(20, size = 40, prob = 0.5) + pbinom(19, size = 40, prob = 0.5)
setwd("~/Repos/stats/math2625-attempt2")
#case study 2
data2 = read.table("heart.txt")
#case study 2
data2 = read.table("heart.txt", header=TRUE)
head(data2)
View(data2)
pdi_lowFlow = subset(data2$pdi, data2$treatment == "Low-flow")
mdi_lowFlow = subset(data2$mdi, data2$treatment == "Low-flow")
PDI_lowFlow = subset(data2$pdi, data2$treatment == "Low-flow")
MDI_lowFlow = subset(data2$mdi, data2$treatment == "Low-flow")
rm(pdi_lowFlow, mdi_lowFlow)
rm(MDI_lowFlow, PDI_lowFlow)
t.test(dcha$pdi, lowflow$pdi)
dcha    <- subset(data2, treatment == 'DCHA')
lowflow <- subset(data2, treatment == 'Low-flow')
t.test(dcha$pdi, lowflow$pdi)
summary(dcha$pdi)
summary(lowflow$pdi)
t.test(dcha$pdi, lowflow$pdi)
# sensitivity using mann-whitney u test:
wilcox.test(dcha$pdi, lowflow$pdi)
library(ISwR)
View(red.cell.fonate)
install.packages(ISwR)
